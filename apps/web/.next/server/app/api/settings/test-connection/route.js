"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/settings/test-connection/route";
exports.ids = ["app/api/settings/test-connection/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Ftest-connection%2Froute&page=%2Fapi%2Fsettings%2Ftest-connection%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Ftest-connection%2Froute.ts&appDir=%2FUsers%2Fbyronhudson%2FProjects%2FBuildRunnerSaaS%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbyronhudson%2FProjects%2FBuildRunnerSaaS%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Ftest-connection%2Froute&page=%2Fapi%2Fsettings%2Ftest-connection%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Ftest-connection%2Froute.ts&appDir=%2FUsers%2Fbyronhudson%2FProjects%2FBuildRunnerSaaS%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbyronhudson%2FProjects%2FBuildRunnerSaaS%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _Users_byronhudson_Projects_BuildRunnerSaaS_apps_web_app_api_settings_test_connection_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/settings/test-connection/route.ts */ \"(rsc)/./app/api/settings/test-connection/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/settings/test-connection/route\",\n        pathname: \"/api/settings/test-connection\",\n        filename: \"route\",\n        bundlePath: \"app/api/settings/test-connection/route\"\n    },\n    resolvedPagePath: \"/Users/byronhudson/Projects/BuildRunnerSaaS/apps/web/app/api/settings/test-connection/route.ts\",\n    nextConfigOutput,\n    userland: _Users_byronhudson_Projects_BuildRunnerSaaS_apps_web_app_api_settings_test_connection_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/settings/test-connection/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzZXR0aW5ncyUyRnRlc3QtY29ubmVjdGlvbiUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGc2V0dGluZ3MlMkZ0ZXN0LWNvbm5lY3Rpb24lMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZzZXR0aW5ncyUyRnRlc3QtY29ubmVjdGlvbiUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmJ5cm9uaHVkc29uJTJGUHJvamVjdHMlMkZCdWlsZFJ1bm5lclNhYVMlMkZhcHBzJTJGd2ViJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmJ5cm9uaHVkc29uJTJGUHJvamVjdHMlMkZCdWlsZFJ1bm5lclNhYVMlMkZhcHBzJTJGd2ViJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUM0RDtBQUMzSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNpSjs7QUFFakoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9idWlsZHJ1bm5lci13ZWIvPzU5ZTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2J5cm9uaHVkc29uL1Byb2plY3RzL0J1aWxkUnVubmVyU2FhUy9hcHBzL3dlYi9hcHAvYXBpL3NldHRpbmdzL3Rlc3QtY29ubmVjdGlvbi9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc2V0dGluZ3MvdGVzdC1jb25uZWN0aW9uL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvc2V0dGluZ3MvdGVzdC1jb25uZWN0aW9uXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9zZXR0aW5ncy90ZXN0LWNvbm5lY3Rpb24vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvYnlyb25odWRzb24vUHJvamVjdHMvQnVpbGRSdW5uZXJTYWFTL2FwcHMvd2ViL2FwcC9hcGkvc2V0dGluZ3MvdGVzdC1jb25uZWN0aW9uL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3NldHRpbmdzL3Rlc3QtY29ubmVjdGlvbi9yb3V0ZVwiO1xuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Ftest-connection%2Froute&page=%2Fapi%2Fsettings%2Ftest-connection%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Ftest-connection%2Froute.ts&appDir=%2FUsers%2Fbyronhudson%2FProjects%2FBuildRunnerSaaS%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbyronhudson%2FProjects%2FBuildRunnerSaaS%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/settings/test-connection/route.ts":
/*!***************************************************!*\
  !*** ./app/api/settings/test-connection/route.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n\nasync function POST(request) {\n    try {\n        const { keyId, value } = await request.json();\n        if (!keyId || !value) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                error: \"Key ID and value are required\"\n            }, {\n                status: 400\n            });\n        }\n        let testResult = {\n            success: false,\n            error: \"Unknown key type\"\n        };\n        switch(keyId){\n            case \"openrouter\":\n                testResult = await testOpenRouter(value);\n                break;\n            case \"supabase_url\":\n                testResult = await testSupabaseUrl(value);\n                break;\n            case \"supabase_anon_key\":\n                testResult = await testSupabaseKey(value);\n                break;\n            case \"crunchbase\":\n                testResult = await testCrunchbase(value);\n                break;\n            case \"producthunt\":\n                testResult = await testProductHunt(value);\n                break;\n            default:\n                testResult = {\n                    success: false,\n                    error: `Unknown key type: ${keyId}`\n                };\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(testResult);\n    } catch (error) {\n        console.error(\"Error testing connection:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Connection test failed\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function testOpenRouter(apiKey) {\n    console.log(\"Testing OpenRouter API key...\");\n    try {\n        // Add a small delay to show it's actually testing\n        await new Promise((resolve)=>setTimeout(resolve, 1000));\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=>controller.abort(), 10000); // 10 second timeout\n        const response = await fetch(\"https://openrouter.ai/api/v1/models\", {\n            headers: {\n                \"Authorization\": `Bearer ${apiKey}`,\n                \"Content-Type\": \"application/json\",\n                \"HTTP-Referer\": \"https://buildrunner.cloud\",\n                \"X-Title\": \"BuildRunner SaaS\"\n            },\n            signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        if (response.ok) {\n            const data = await response.json();\n            console.log(\"OpenRouter test successful, models found:\", data.data?.length || 0);\n            return {\n                success: true,\n                message: `Connected successfully. Found ${data.data?.length || 0} available models.`\n            };\n        } else {\n            const error = await response.text();\n            console.error(\"OpenRouter test failed:\", response.status, error);\n            return {\n                success: false,\n                error: `OpenRouter API error: ${response.status} - ${error.substring(0, 200)}`\n            };\n        }\n    } catch (error) {\n        console.error(\"OpenRouter test error:\", error);\n        if (error.name === \"AbortError\") {\n            return {\n                success: false,\n                error: \"OpenRouter connection timed out after 10 seconds\"\n            };\n        }\n        return {\n            success: false,\n            error: `OpenRouter connection failed: ${error.message}`\n        };\n    }\n}\nasync function testSupabaseUrl(url) {\n    console.log(\"Testing Supabase URL...\");\n    try {\n        // Add a small delay to show it's actually testing\n        await new Promise((resolve)=>setTimeout(resolve, 800));\n        // Basic URL validation\n        const urlObj = new URL(url);\n        if (!urlObj.hostname.includes(\"supabase\")) {\n            return {\n                success: false,\n                error: 'URL does not appear to be a Supabase URL (should contain \"supabase\")'\n            };\n        }\n        // Test basic connectivity with timeout\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=>controller.abort(), 8000); // 8 second timeout\n        const response = await fetch(`${url}/rest/v1/`, {\n            method: \"HEAD\",\n            signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        if (response.status === 401 || response.status === 200) {\n            // 401 is expected without auth, 200 means it's accessible\n            console.log(\"Supabase URL test successful\");\n            return {\n                success: true,\n                message: \"Supabase URL is valid and accessible\"\n            };\n        } else {\n            console.error(\"Supabase URL test failed:\", response.status);\n            return {\n                success: false,\n                error: `Supabase URL test failed with status: ${response.status}`\n            };\n        }\n    } catch (error) {\n        console.error(\"Supabase URL test error:\", error);\n        if (error.name === \"AbortError\") {\n            return {\n                success: false,\n                error: \"Supabase URL connection timed out after 8 seconds\"\n            };\n        }\n        return {\n            success: false,\n            error: `Invalid Supabase URL: ${error.message}`\n        };\n    }\n}\nasync function testSupabaseKey(key) {\n    try {\n        // Basic key format validation\n        if (!key.startsWith(\"eyJ\")) {\n            return {\n                success: false,\n                error: \"Supabase key format appears invalid\"\n            };\n        }\n        // Try to decode the JWT to validate format\n        const parts = key.split(\".\");\n        if (parts.length !== 3) {\n            return {\n                success: false,\n                error: \"Supabase key is not a valid JWT format\"\n            };\n        }\n        try {\n            const payload = JSON.parse(atob(parts[1]));\n            if (payload.role !== \"anon\") {\n                return {\n                    success: false,\n                    error: \"This appears to be a service role key, not an anon key\"\n                };\n            }\n        } catch (e) {\n            return {\n                success: false,\n                error: \"Could not decode Supabase key\"\n            };\n        }\n        return {\n            success: true,\n            message: \"Supabase anon key format is valid\"\n        };\n    } catch (error) {\n        return {\n            success: false,\n            error: `Supabase key validation failed: ${error.message}`\n        };\n    }\n}\nasync function testCrunchbase(apiKey) {\n    try {\n        const response = await fetch(\"https://api.crunchbase.com/api/v4/entities/organizations?limit=1\", {\n            headers: {\n                \"X-cb-user-key\": apiKey,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (response.ok) {\n            return {\n                success: true,\n                message: \"Crunchbase API key is valid\"\n            };\n        } else {\n            const error = await response.text();\n            return {\n                success: false,\n                error: `Crunchbase API error: ${response.status} - ${error}`\n            };\n        }\n    } catch (error) {\n        return {\n            success: false,\n            error: `Crunchbase connection failed: ${error.message}`\n        };\n    }\n}\nasync function testProductHunt(apiKey) {\n    try {\n        const response = await fetch(\"https://api.producthunt.com/v2/api/graphql\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${apiKey}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                query: \"{ viewer { user { name } } }\"\n            })\n        });\n        if (response.ok) {\n            const data = await response.json();\n            if (data.errors) {\n                return {\n                    success: false,\n                    error: `ProductHunt API error: ${data.errors[0]?.message}`\n                };\n            }\n            return {\n                success: true,\n                message: \"ProductHunt API key is valid\"\n            };\n        } else {\n            const error = await response.text();\n            return {\n                success: false,\n                error: `ProductHunt API error: ${response.status} - ${error}`\n            };\n        }\n    } catch (error) {\n        return {\n            success: false,\n            error: `ProductHunt connection failed: ${error.message}`\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3NldHRpbmdzL3Rlc3QtY29ubmVjdGlvbi9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3RDtBQUVqRCxlQUFlQyxLQUFLQyxPQUFvQjtJQUM3QyxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1GLFFBQVFHLElBQUk7UUFFM0MsSUFBSSxDQUFDRixTQUFTLENBQUNDLE9BQU87WUFDcEIsT0FBT0osa0ZBQVlBLENBQUNLLElBQUksQ0FDdEI7Z0JBQUVDLFNBQVM7Z0JBQU9DLE9BQU87WUFBZ0MsR0FDekQ7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLElBQUlDLGFBQWE7WUFBRUgsU0FBUztZQUFPQyxPQUFPO1FBQW1CO1FBRTdELE9BQVFKO1lBQ04sS0FBSztnQkFDSE0sYUFBYSxNQUFNQyxlQUFlTjtnQkFDbEM7WUFDRixLQUFLO2dCQUNISyxhQUFhLE1BQU1FLGdCQUFnQlA7Z0JBQ25DO1lBQ0YsS0FBSztnQkFDSEssYUFBYSxNQUFNRyxnQkFBZ0JSO2dCQUNuQztZQUNGLEtBQUs7Z0JBQ0hLLGFBQWEsTUFBTUksZUFBZVQ7Z0JBQ2xDO1lBQ0YsS0FBSztnQkFDSEssYUFBYSxNQUFNSyxnQkFBZ0JWO2dCQUNuQztZQUNGO2dCQUNFSyxhQUFhO29CQUFFSCxTQUFTO29CQUFPQyxPQUFPLENBQUMsa0JBQWtCLEVBQUVKLE1BQU0sQ0FBQztnQkFBQztRQUN2RTtRQUVBLE9BQU9ILGtGQUFZQSxDQUFDSyxJQUFJLENBQUNJO0lBQzNCLEVBQUUsT0FBT0YsT0FBTztRQUNkUSxRQUFRUixLQUFLLENBQUMsNkJBQTZCQTtRQUMzQyxPQUFPUCxrRkFBWUEsQ0FBQ0ssSUFBSSxDQUN0QjtZQUFFQyxTQUFTO1lBQU9DLE9BQU87UUFBeUIsR0FDbEQ7WUFBRUMsUUFBUTtRQUFJO0lBRWxCO0FBQ0Y7QUFFQSxlQUFlRSxlQUFlTSxNQUFjO0lBQzFDRCxRQUFRRSxHQUFHLENBQUM7SUFFWixJ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TztRQUNkLE9BQU87WUFDTEQsU0FBUztZQUNUQyxPQUFPLENBQUMsK0JBQStCLEVBQUVBLE1BQU0wQixPQUFPLENBQUMsQ0FBQztRQUMxRDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9idWlsZHJ1bm5lci13ZWIvLi9hcHAvYXBpL3NldHRpbmdzL3Rlc3QtY29ubmVjdGlvbi9yb3V0ZS50cz8yOGU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBrZXlJZCwgdmFsdWUgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgIFxuICAgIGlmICgha2V5SWQgfHwgIXZhbHVlKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnS2V5IElEIGFuZCB2YWx1ZSBhcmUgcmVxdWlyZWQnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBsZXQgdGVzdFJlc3VsdCA9IHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnVW5rbm93biBrZXkgdHlwZScgfTtcblxuICAgIHN3aXRjaCAoa2V5SWQpIHtcbiAgICAgIGNhc2UgJ29wZW5yb3V0ZXInOlxuICAgICAgICB0ZXN0UmVzdWx0ID0gYXdhaXQgdGVzdE9wZW5Sb3V0ZXIodmFsdWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3N1cGFiYXNlX3VybCc6XG4gICAgICAgIHRlc3RSZXN1bHQgPSBhd2FpdCB0ZXN0U3VwYWJhc2VVcmwodmFsdWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3N1cGFiYXNlX2Fub25fa2V5JzpcbiAgICAgICAgdGVzdFJlc3VsdCA9IGF3YWl0IHRlc3RTdXBhYmFzZUtleSh2YWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY3J1bmNoYmFzZSc6XG4gICAgICAgIHRlc3RSZXN1bHQgPSBhd2FpdCB0ZXN0Q3J1bmNoYmFzZSh2YWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncHJvZHVjdGh1bnQnOlxuICAgICAgICB0ZXN0UmVzdWx0ID0gYXdhaXQgdGVzdFByb2R1Y3RIdW50KHZhbHVlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0ZXN0UmVzdWx0ID0geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGBVbmtub3duIGtleSB0eXBlOiAke2tleUlkfWAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24odGVzdFJlc3VsdCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgdGVzdGluZyBjb25uZWN0aW9uOicsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ0Nvbm5lY3Rpb24gdGVzdCBmYWlsZWQnIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHRlc3RPcGVuUm91dGVyKGFwaUtleTogc3RyaW5nKSB7XG4gIGNvbnNvbGUubG9nKCdUZXN0aW5nIE9wZW5Sb3V0ZXIgQVBJIGtleS4uLicpO1xuXG4gIHRyeSB7XG4gICAgLy8gQWRkIGEgc21hbGwgZGVsYXkgdG8gc2hvdyBpdCdzIGFjdHVhbGx5IHRlc3RpbmdcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwMCkpO1xuXG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IGNvbnRyb2xsZXIuYWJvcnQoKSwgMTAwMDApOyAvLyAxMCBzZWNvbmQgdGltZW91dFxuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9vcGVucm91dGVyLmFpL2FwaS92MS9tb2RlbHMnLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke2FwaUtleX1gLFxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAnSFRUUC1SZWZlcmVyJzogJ2h0dHBzOi8vYnVpbGRydW5uZXIuY2xvdWQnLFxuICAgICAgICAnWC1UaXRsZSc6ICdCdWlsZFJ1bm5lciBTYWFTJyxcbiAgICAgIH0sXG4gICAgICBzaWduYWw6IGNvbnRyb2xsZXIuc2lnbmFsLFxuICAgIH0pO1xuXG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG5cbiAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBjb25zb2xlLmxvZygnT3BlblJvdXRlciB0ZXN0IHN1Y2Nlc3NmdWwsIG1vZGVscyBmb3VuZDonLCBkYXRhLmRhdGE/Lmxlbmd0aCB8fCAwKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG1lc3NhZ2U6IGBDb25uZWN0ZWQgc3VjY2Vzc2Z1bGx5LiBGb3VuZCAke2RhdGEuZGF0YT8ubGVuZ3RoIHx8IDB9IGF2YWlsYWJsZSBtb2RlbHMuYFxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgZXJyb3IgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICBjb25zb2xlLmVycm9yKCdPcGVuUm91dGVyIHRlc3QgZmFpbGVkOicsIHJlc3BvbnNlLnN0YXR1cywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiBgT3BlblJvdXRlciBBUEkgZXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzfSAtICR7ZXJyb3Iuc3Vic3RyaW5nKDAsIDIwMCl9YFxuICAgICAgfTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignT3BlblJvdXRlciB0ZXN0IGVycm9yOicsIGVycm9yKTtcbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gJ0Fib3J0RXJyb3InKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6ICdPcGVuUm91dGVyIGNvbm5lY3Rpb24gdGltZWQgb3V0IGFmdGVyIDEwIHNlY29uZHMnXG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogYE9wZW5Sb3V0ZXIgY29ubmVjdGlvbiBmYWlsZWQ6ICR7ZXJyb3IubWVzc2FnZX1gXG4gICAgfTtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiB0ZXN0U3VwYWJhc2VVcmwodXJsOiBzdHJpbmcpIHtcbiAgY29uc29sZS5sb2coJ1Rlc3RpbmcgU3VwYWJhc2UgVVJMLi4uJyk7XG5cbiAgdHJ5IHtcbiAgICAvLyBBZGQgYSBzbWFsbCBkZWxheSB0byBzaG93IGl0J3MgYWN0dWFsbHkgdGVzdGluZ1xuICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCA4MDApKTtcblxuICAgIC8vIEJhc2ljIFVSTCB2YWxpZGF0aW9uXG4gICAgY29uc3QgdXJsT2JqID0gbmV3IFVSTCh1cmwpO1xuICAgIGlmICghdXJsT2JqLmhvc3RuYW1lLmluY2x1ZGVzKCdzdXBhYmFzZScpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6ICdVUkwgZG9lcyBub3QgYXBwZWFyIHRvIGJlIGEgU3VwYWJhc2UgVVJMIChzaG91bGQgY29udGFpbiBcInN1cGFiYXNlXCIpJ1xuICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBUZXN0IGJhc2ljIGNvbm5lY3Rpdml0eSB3aXRoIHRpbWVvdXRcbiAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gY29udHJvbGxlci5hYm9ydCgpLCA4MDAwKTsgLy8gOCBzZWNvbmQgdGltZW91dFxuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt1cmx9L3Jlc3QvdjEvYCwge1xuICAgICAgbWV0aG9kOiAnSEVBRCcsXG4gICAgICBzaWduYWw6IGNvbnRyb2xsZXIuc2lnbmFsLFxuICAgIH0pO1xuXG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG5cbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEgfHwgcmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHtcbiAgICAgIC8vIDQwMSBpcyBleHBlY3RlZCB3aXRob3V0IGF1dGgsIDIwMCBtZWFucyBpdCdzIGFjY2Vzc2libGVcbiAgICAgIGNvbnNvbGUubG9nKCdTdXBhYmFzZSBVUkwgdGVzdCBzdWNjZXNzZnVsJyk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBtZXNzYWdlOiAnU3VwYWJhc2UgVVJMIGlzIHZhbGlkIGFuZCBhY2Nlc3NpYmxlJ1xuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcignU3VwYWJhc2UgVVJMIHRlc3QgZmFpbGVkOicsIHJlc3BvbnNlLnN0YXR1cyk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IGBTdXBhYmFzZSBVUkwgdGVzdCBmYWlsZWQgd2l0aCBzdGF0dXM6ICR7cmVzcG9uc2Uuc3RhdHVzfWBcbiAgICAgIH07XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1N1cGFiYXNlIFVSTCB0ZXN0IGVycm9yOicsIGVycm9yKTtcbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gJ0Fib3J0RXJyb3InKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6ICdTdXBhYmFzZSBVUkwgY29ubmVjdGlvbiB0aW1lZCBvdXQgYWZ0ZXIgOCBzZWNvbmRzJ1xuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IGBJbnZhbGlkIFN1cGFiYXNlIFVSTDogJHtlcnJvci5tZXNzYWdlfWBcbiAgICB9O1xuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHRlc3RTdXBhYmFzZUtleShrZXk6IHN0cmluZykge1xuICB0cnkge1xuICAgIC8vIEJhc2ljIGtleSBmb3JtYXQgdmFsaWRhdGlvblxuICAgIGlmICgha2V5LnN0YXJ0c1dpdGgoJ2V5SicpKSB7XG4gICAgICByZXR1cm4geyBcbiAgICAgICAgc3VjY2VzczogZmFsc2UsIFxuICAgICAgICBlcnJvcjogJ1N1cGFiYXNlIGtleSBmb3JtYXQgYXBwZWFycyBpbnZhbGlkJyBcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gVHJ5IHRvIGRlY29kZSB0aGUgSldUIHRvIHZhbGlkYXRlIGZvcm1hdFxuICAgIGNvbnN0IHBhcnRzID0ga2V5LnNwbGl0KCcuJyk7XG4gICAgaWYgKHBhcnRzLmxlbmd0aCAhPT0gMykge1xuICAgICAgcmV0dXJuIHsgXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcbiAgICAgICAgZXJyb3I6ICdTdXBhYmFzZSBrZXkgaXMgbm90IGEgdmFsaWQgSldUIGZvcm1hdCcgXG4gICAgICB9O1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBwYXlsb2FkID0gSlNPTi5wYXJzZShhdG9iKHBhcnRzWzFdKSk7XG4gICAgICBpZiAocGF5bG9hZC5yb2xlICE9PSAnYW5vbicpIHtcbiAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsIFxuICAgICAgICAgIGVycm9yOiAnVGhpcyBhcHBlYXJzIHRvIGJlIGEgc2VydmljZSByb2xlIGtleSwgbm90IGFuIGFub24ga2V5JyBcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4geyBcbiAgICAgICAgc3VjY2VzczogZmFsc2UsIFxuICAgICAgICBlcnJvcjogJ0NvdWxkIG5vdCBkZWNvZGUgU3VwYWJhc2Uga2V5JyBcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgXG4gICAgICBzdWNjZXNzOiB0cnVlLCBcbiAgICAgIG1lc3NhZ2U6ICdTdXBhYmFzZSBhbm9uIGtleSBmb3JtYXQgaXMgdmFsaWQnIFxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHsgXG4gICAgICBzdWNjZXNzOiBmYWxzZSwgXG4gICAgICBlcnJvcjogYFN1cGFiYXNlIGtleSB2YWxpZGF0aW9uIGZhaWxlZDogJHtlcnJvci5tZXNzYWdlfWAgXG4gICAgfTtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiB0ZXN0Q3J1bmNoYmFzZShhcGlLZXk6IHN0cmluZykge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLmNydW5jaGJhc2UuY29tL2FwaS92NC9lbnRpdGllcy9vcmdhbml6YXRpb25zP2xpbWl0PTEnLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdYLWNiLXVzZXIta2V5JzogYXBpS2V5LFxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgcmV0dXJuIHsgXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsIFxuICAgICAgICBtZXNzYWdlOiAnQ3J1bmNoYmFzZSBBUEkga2V5IGlzIHZhbGlkJyBcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVycm9yID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgICAgcmV0dXJuIHsgXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcbiAgICAgICAgZXJyb3I6IGBDcnVuY2hiYXNlIEFQSSBlcnJvcjogJHtyZXNwb25zZS5zdGF0dXN9IC0gJHtlcnJvcn1gIFxuICAgICAgfTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHsgXG4gICAgICBzdWNjZXNzOiBmYWxzZSwgXG4gICAgICBlcnJvcjogYENydW5jaGJhc2UgY29ubmVjdGlvbiBmYWlsZWQ6ICR7ZXJyb3IubWVzc2FnZX1gIFxuICAgIH07XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gdGVzdFByb2R1Y3RIdW50KGFwaUtleTogc3RyaW5nKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkucHJvZHVjdGh1bnQuY29tL3YyL2FwaS9ncmFwaHFsJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke2FwaUtleX1gLFxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgcXVlcnk6ICd7IHZpZXdlciB7IHVzZXIgeyBuYW1lIH0gfSB9J1xuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBpZiAoZGF0YS5lcnJvcnMpIHtcbiAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsIFxuICAgICAgICAgIGVycm9yOiBgUHJvZHVjdEh1bnQgQVBJIGVycm9yOiAke2RhdGEuZXJyb3JzWzBdPy5tZXNzYWdlfWAgXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm4geyBcbiAgICAgICAgc3VjY2VzczogdHJ1ZSwgXG4gICAgICAgIG1lc3NhZ2U6ICdQcm9kdWN0SHVudCBBUEkga2V5IGlzIHZhbGlkJyBcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVycm9yID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgICAgcmV0dXJuIHsgXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcbiAgICAgICAgZXJyb3I6IGBQcm9kdWN0SHVudCBBUEkgZXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzfSAtICR7ZXJyb3J9YCBcbiAgICAgIH07XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB7IFxuICAgICAgc3VjY2VzczogZmFsc2UsIFxuICAgICAgZXJyb3I6IGBQcm9kdWN0SHVudCBjb25uZWN0aW9uIGZhaWxlZDogJHtlcnJvci5tZXNzYWdlfWAgXG4gICAgfTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsIlBPU1QiLCJyZXF1ZXN0Iiwia2V5SWQiLCJ2YWx1ZSIsImpzb24iLCJzdWNjZXNzIiwiZXJyb3IiLCJzdGF0dXMiLCJ0ZXN0UmVzdWx0IiwidGVzdE9wZW5Sb3V0ZXIiLCJ0ZXN0U3VwYWJhc2VVcmwiLCJ0ZXN0U3VwYWJhc2VLZXkiLCJ0ZXN0Q3J1bmNoYmFzZSIsInRlc3RQcm9kdWN0SHVudCIsImNvbnNvbGUiLCJhcGlLZXkiLCJsb2ciLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJjb250cm9sbGVyIiwiQWJvcnRDb250cm9sbGVyIiwidGltZW91dElkIiwiYWJvcnQiLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsInNpZ25hbCIsImNsZWFyVGltZW91dCIsIm9rIiwiZGF0YSIsImxlbmd0aCIsIm1lc3NhZ2UiLCJ0ZXh0Iiwic3Vic3RyaW5nIiwibmFtZSIsInVybCIsInVybE9iaiIsIlVSTCIsImhvc3RuYW1lIiwiaW5jbHVkZXMiLCJtZXRob2QiLCJrZXkiLCJzdGFydHNXaXRoIiwicGFydHMiLCJzcGxpdCIsInBheWxvYWQiLCJKU09OIiwicGFyc2UiLCJhdG9iIiwicm9sZSIsImUiLCJib2R5Iiwic3RyaW5naWZ5IiwicXVlcnkiLCJlcnJvcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/settings/test-connection/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsettings%2Ftest-connection%2Froute&page=%2Fapi%2Fsettings%2Ftest-connection%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsettings%2Ftest-connection%2Froute.ts&appDir=%2FUsers%2Fbyronhudson%2FProjects%2FBuildRunnerSaaS%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbyronhudson%2FProjects%2FBuildRunnerSaaS%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();