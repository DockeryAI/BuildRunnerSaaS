# BuildRunner Governance Policy
# Defines rules and constraints for project execution

version: "1.0"
updated_at: "2025-10-31T02:00:00.000Z"

# Global policy settings
global:
  # Quality requirements
  quality:
    min_acceptance_criteria_pass_rate: 80
    min_test_coverage: 75
    require_peer_review: true
    max_consecutive_failures: 3

  # Security requirements
  security:
    require_approval_for_sensitive_changes: true
    max_risk_level: "medium"
    require_security_review: true

  # Analytics and cost monitoring
  analytics:
    budget_alert_threshold: 500.00  # USD monthly limit
    cost_spike_threshold: 50        # Percentage increase that triggers alert
    quality_drop_threshold: 20      # Percentage decrease that triggers alert
    velocity_drop_threshold: 30     # Percentage decrease that triggers alert
    require_anomaly_review: true    # Require review before proceeding with anomalies
    max_daily_cost: 50.00          # Maximum daily cost before blocking
    require_cost_approval_above: 100.00  # Require approval for costs above this amount
    anomaly_escalation_threshold: "high"  # Escalate anomalies at this severity level
    budget_enforcement: true        # Block operations when budget exceeded

# Phase-specific policies
phases:
  # Phase 1-3: Foundation phases
  foundation:
    phases: [1, 2, 3]
    quality:
      min_acceptance_criteria_pass_rate: 90
      require_architecture_review: true
    security:
      require_security_scan: true
    analytics:
      max_daily_cost: 25.00

  # Phase 4-6: Development phases  
  development:
    phases: [4, 5, 6]
    quality:
      min_acceptance_criteria_pass_rate: 85
      require_integration_tests: true
    analytics:
      max_daily_cost: 40.00

  # Phase 7-9: Advanced phases
  advanced:
    phases: [7, 8, 9]
    quality:
      min_acceptance_criteria_pass_rate: 80
      require_performance_tests: true
    analytics:
      max_daily_cost: 50.00

# Violation handling
violations:
  # Actions to take when policies are violated
  quality_violation:
    action: "block"
    notification: "required"
    escalation: "team_lead"

  security_violation:
    action: "block"
    notification: "immediate"
    escalation: "security_team"

  cost_violation:
    action: "alert"  # Can be "block", "alert", or "approve"
    notification: "required"
    escalation: "project_manager"

  anomaly_violation:
    action: "review"
    notification: "required"
    escalation: "analytics_team"

# Approval workflows
approvals:
  # Cost approvals
  cost_approval:
    required_for:
      - daily_cost_above: 50.00
      - monthly_cost_above: 500.00
      - cost_spike_above: 100  # Percentage
    approvers:
      - "project_manager"
      - "finance_team"
    timeout_hours: 24

  # Anomaly approvals
  anomaly_approval:
    required_for:
      - severity: ["high", "critical"]
      - unresolved_count_above: 5
    approvers:
      - "analytics_team"
      - "project_manager"
    timeout_hours: 4

  # Quality approvals
  quality_approval:
    required_for:
      - quality_drop_above: 20  # Percentage
      - test_failure_rate_above: 25  # Percentage
    approvers:
      - "qa_team"
      - "tech_lead"
    timeout_hours: 8

# Notification settings
notifications:
  # Cost notifications
  cost_alerts:
    budget_threshold_reached: ["project_manager", "finance_team"]
    daily_limit_exceeded: ["project_manager"]
    cost_spike_detected: ["project_manager", "analytics_team"]

  # Quality notifications
  quality_alerts:
    quality_drop_detected: ["qa_team", "tech_lead"]
    test_failure_spike: ["qa_team", "dev_team"]
    acceptance_criteria_failure: ["product_owner", "qa_team"]

  # Anomaly notifications
  anomaly_alerts:
    new_anomaly_detected: ["analytics_team"]
    critical_anomaly: ["project_manager", "analytics_team", "tech_lead"]
    anomaly_escalation: ["executive_team"]

# Audit and compliance
audit:
  # Required audit events
  required_events:
    - "cost_recorded"
    - "anomaly_detected"
    - "policy_violation"
    - "approval_requested"
    - "approval_granted"
    - "approval_denied"

  # Retention policies
  retention:
    audit_logs: "2_years"
    cost_data: "7_years"  # For tax/compliance purposes
    metrics_data: "1_year"
    anomaly_data: "1_year"

  # Compliance requirements
  compliance:
    require_audit_trail: true
    require_data_encryption: true
    require_access_logging: true
    data_residency: "us"  # or "eu", "global"

# Integration settings
integrations:
  # External systems
  slack:
    enabled: true
    channels:
      alerts: "#buildrunner-alerts"
      approvals: "#buildrunner-approvals"
      anomalies: "#buildrunner-anomalies"

  email:
    enabled: true
    templates:
      cost_alert: "cost_alert_template"
      anomaly_alert: "anomaly_alert_template"
      approval_request: "approval_request_template"

  # Monitoring systems
  monitoring:
    prometheus:
      enabled: false
      endpoint: ""
    datadog:
      enabled: false
      api_key: ""

# Emergency procedures
emergency:
  # Emergency contacts
  contacts:
    primary: "emergency@buildrunner.com"
    secondary: "ops@buildrunner.com"

  # Emergency overrides
  overrides:
    cost_limits: false  # Allow emergency cost override
    quality_gates: true  # Allow emergency quality override
    security_checks: false  # Never override security

  # Incident response
  incident_response:
    auto_escalate_critical: true
    max_response_time_minutes: 30
    require_post_incident_review: true
