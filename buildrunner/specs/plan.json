{
  "projectId": "placeholder:will-be-uuid",
  "title": "BuildRunner Core Runner & Spec Foundation",
  "version": "1.0.0-rc.0",
  "updatedAt": "2025-10-31T03:00:00.000Z",
  "milestones": [
    {
      "id": "m1",
      "title": "Setup Environment & Repo",
      "steps": [
        {
          "id": "m1.s1",
          "title": "Scaffold repository and CLI skeleton",
          "microsteps": [
            {
              "id": "m1.s1.ms1",
              "title": "Create base folder structure (/buildrunner/*, /src/*)",
              "status": "todo",
              "criteria": ["Folders exist with correct paths and tracked by git"]
            },
            {
              "id": "m1.s1.ms2",
              "title": "Initialize Node+TypeScript project",
              "status": "todo",
              "criteria": ["package.json and tsconfig.json exist; tsc compiles without errors"]
            },
            {
              "id": "m1.s1.ms3",
              "title": "Install runtime and dev dependencies",
              "status": "todo",
              "criteria": ["lockfile present; scripts run successfully"]
            },
            {
              "id": "m1.s1.ms4",
              "title": "Create Build Spec TS interfaces",
              "status": "todo",
              "criteria": ["src/schema/buildSpec.ts exports BuildSpec, Milestone, Step, Microstep types; builds cleanly"]
            },
            {
              "id": "m1.s1.ms5",
              "title": "Stub CLI command router",
              "status": "todo",
              "criteria": ["src/index.ts compiles; 'node dist/index.js --help' shows commands: init, sync, status (stub handlers)"]
            },
            {
              "id": "m1.s1.ms6",
              "title": "Add runner_state.json seed and plan.json seed",
              "status": "todo",
              "criteria": ["runner_state.json mirrors plan skeleton with same milestone/step structure"]
            },
            {
              "id": "m1.s1.ms7",
              "title": "Create .env.example and verify-env script",
              "status": "todo",
              "criteria": [".env.example lists SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY; scripts: dev, build, test work"]
            },
            {
              "id": "m1.s1.ms8",
              "title": "Initial README with getting started",
              "status": "todo",
              "criteria": ["README shows install, dev, build commands and folder overview"]
            }
          ]
        }
      ]
    },
    {
      "id": "m2",
      "title": "Spec Schema Expansion + Supabase Sync",
      "steps": [
        {
          "id": "m2.s1",
          "title": "Expand Schema",
          "microsteps": [
            {
              "id": "m2.s1.ms1",
              "title": "Update TypeScript interfaces with new fields",
              "status": "done",
              "criteria": ["TypeScript compiles without errors"]
            },
            {
              "id": "m2.s1.ms2",
              "title": "Add Ajv JSON Schema with validators",
              "status": "done",
              "criteria": ["Schema validates valid sample and rejects invalid sample"]
            },
            {
              "id": "m2.s1.ms3",
              "title": "CLI lint command",
              "status": "done",
              "criteria": ["0 validation errors on existing plan; fails on bad sample"]
            }
          ]
        },
        {
          "id": "m2.s2",
          "title": "Supabase Schema + Migrations",
          "microsteps": [
            {
              "id": "m2.s2.ms1",
              "title": "Create SQL migration",
              "status": "done",
              "criteria": ["Migration file present and formatted"]
            },
            {
              "id": "m2.s2.ms2",
              "title": "Add spec-sync Edge Function",
              "status": "done",
              "criteria": ["Function compiles locally"]
            },
            {
              "id": "m2.s2.ms3",
              "title": "Add spec-diff Edge Function",
              "status": "done",
              "criteria": ["Function compiles locally"]
            },
            {
              "id": "m2.s2.ms4",
              "title": "Add npm scripts",
              "status": "done",
              "criteria": ["package.json updated with Supabase scripts"]
            }
          ]
        },
        {
          "id": "m2.s3",
          "title": "CLI + API Integration",
          "microsteps": [
            {
              "id": "m2.s3.ms1",
              "title": "Implement buildrunner sync",
              "status": "done",
              "criteria": ["Console prints sync results"]
            },
            {
              "id": "m2.s3.ms2",
              "title": "Implement buildrunner status",
              "status": "done",
              "criteria": ["Shows Supabase health status"]
            }
          ]
        }
      ]
    },
    {
      "id": "p3",
      "title": "Supabase Provisioner & One-Click Backend",
      "steps": [
        {
          "id": "p3.s1",
          "title": "Provisioner service (server-side)",
          "microsteps": [
            {
              "id": "p3.s1.ms1",
              "title": "OAuth/PAT intake routes + encrypted vault",
              "status": "done",
              "criteria": ["OAuth flow completes; token encrypted server-side; no secrets in client"]
            },
            {
              "id": "p3.s1.ms2",
              "title": "Create project via Management API",
              "status": "done",
              "criteria": ["Management API creates project; project_ref recorded"]
            },
            {
              "id": "p3.s1.ms3",
              "title": "Fetch API keys to vault",
              "status": "done",
              "criteria": ["Keys fetched & stored in vault; client sees only masked publishable info"]
            },
            {
              "id": "p3.s1.ms4",
              "title": "Local developer convenience",
              "status": "done",
              "criteria": ["Local .env updated with URL+ANON; runner_state.json timestamps updated"]
            }
          ]
        },
        {
          "id": "p3.s2",
          "title": "Automated DB & Edge Functions",
          "microsteps": [
            {
              "id": "p3.s2.ms1",
              "title": "Baseline idempotent schema",
              "status": "done",
              "criteria": ["SQL lint OK; re-running is safe (idempotent)"]
            },
            {
              "id": "p3.s2.ms2",
              "title": "Programmatic migration apply",
              "status": "done",
              "criteria": ["Tables exist; runner_events action=migration_applied"]
            },
            {
              "id": "p3.s2.ms3",
              "title": "Deploy/verify Edge Functions",
              "status": "done",
              "criteria": ["Deploy returns success; health check 200; log runner_events action=functions_deployed"]
            }
          ]
        },
        {
          "id": "p3.s3",
          "title": "UI: One-Click Create Backend",
          "microsteps": [
            {
              "id": "p3.s3.ms1",
              "title": "Settings→Backend page",
              "status": "done",
              "criteria": ["UX shows deterministic step progression; errors are actionable"]
            },
            {
              "id": "p3.s3.ms2",
              "title": "Success + diagnostics",
              "status": "done",
              "criteria": ["All checks green, or clear error message with retry"]
            },
            {
              "id": "p3.s3.ms3",
              "title": "Plan/state completion & change history",
              "status": "done",
              "criteria": ["Lint passes; version bumped (0.3.0), updatedAt set; files committed"]
            }
          ]
        }
      ]
    },
    {
      "id": "p4",
      "title": "UI MVP (Create/Plan/Workbench/Reconcile/Tests/Settings)",
      "steps": [
        {
          "id": "p4.s1",
          "title": "App Shell, Auth, Navigation",
          "microsteps": [
            {
              "id": "p4.s1.ms1",
              "title": "Scaffold app shell",
              "status": "done",
              "criteria": ["Layout renders; routes load; Tailwind works"]
            },
            {
              "id": "p4.s1.ms2",
              "title": "Supabase Auth integration",
              "status": "done",
              "criteria": ["Unauthed users redirected to sign-in"]
            },
            {
              "id": "p4.s1.ms3",
              "title": "Project selector",
              "status": "done",
              "criteria": ["Current project reflected across pages"]
            }
          ]
        },
        {
          "id": "p4.s2",
          "title": "Create (Prompt → Plan)",
          "microsteps": [
            {
              "id": "p4.s2.ms1",
              "title": "Create page UI",
              "status": "done",
              "criteria": ["Validates non-empty prompt"]
            },
            {
              "id": "p4.s2.ms2",
              "title": "Prompt → Build Spec",
              "status": "done",
              "criteria": ["Plan appears in Plan Editor after save; diff view shows new Phase/Steps"]
            },
            {
              "id": "p4.s2.ms3",
              "title": "Version bump + history",
              "status": "done",
              "criteria": ["br lint passes; state timestamps updated"]
            }
          ]
        }
      ]
    },
    {
      "id": "p5",
      "title": "Flow Inspector + Timeline",
      "steps": [
        {
          "id": "p5.s1",
          "title": "Graph View (Flow Inspector)",
          "microsteps": [
            {
              "id": "p5.s1.ms1",
              "title": "Data API",
              "status": "done",
              "criteria": ["API returns structured JSON with UUIDs and status fields; validated by Zod"]
            },
            {
              "id": "p5.s1.ms2",
              "title": "Graph renderer",
              "status": "done",
              "criteria": ["Graph renders without errors; zoom/pan works"]
            },
            {
              "id": "p5.s1.ms3",
              "title": "Node interactions",
              "status": "done",
              "criteria": ["Drawer opens; links open PR/test URLs"]
            },
            {
              "id": "p5.s1.ms4",
              "title": "Drift indicators",
              "status": "done",
              "criteria": ["Visual flag appears when spec-diff reports mismatch"]
            }
          ]
        },
        {
          "id": "p5.s2",
          "title": "Timeline View & Progress Analytics",
          "microsteps": [
            {
              "id": "p5.s2.ms1",
              "title": "Timeline API",
              "status": "done",
              "criteria": ["JSON includes phase, step, microstep, actor, action, created_at"]
            },
            {
              "id": "p5.s2.ms2",
              "title": "Timeline UI",
              "status": "done",
              "criteria": ["Chart renders with legend and tooltip; data syncs to events table"]
            },
            {
              "id": "p5.s2.ms3",
              "title": "Progress badges",
              "status": "done",
              "criteria": ["% matches calculated from Supabase rows (status = done)"]
            },
            {
              "id": "p5.s2.ms4",
              "title": "Auto-refresh",
              "status": "done",
              "criteria": ["Graph & timeline update in place without reload"]
            }
          ]
        }
      ]
    },
    {
      "id": "p6",
      "title": "Governance & Safety Layer",
      "steps": [
        {
          "id": "p6.s1",
          "title": "Policy DSL + Validation",
          "microsteps": [
            {
              "id": "p6.s1.ms1",
              "title": "Define policy files and schema",
              "status": "done",
              "criteria": ["Schema validates sample policy"]
            },
            {
              "id": "p6.s1.ms2",
              "title": "Server validation endpoint",
              "status": "done",
              "criteria": ["Returns 200 with validation details"]
            },
            {
              "id": "p6.s1.ms3",
              "title": "Persist policy",
              "status": "done",
              "criteria": ["Latest policy version retrievable; version + timestamp logged"]
            }
          ]
        },
        {
          "id": "p6.s2",
          "title": "Protected Paths & Approval Gates",
          "microsteps": [
            {
              "id": "p6.s2.ms1",
              "title": "CODEOWNERS + PR template",
              "status": "done",
              "criteria": ["Template appears on PR; CODEOWNERS request reviews for touched protected paths"]
            },
            {
              "id": "p6.s2.ms2",
              "title": "GitHub Action — Protected paths + approvals",
              "status": "done",
              "criteria": ["Fails when approvals missing; passes when present"]
            }
          ]
        },
        {
          "id": "p6.s3",
          "title": "Microstep ID Enforcement",
          "microsteps": [
            {
              "id": "p6.s3.ms1",
              "title": "GitHub Action — microstep_id check",
              "status": "done",
              "criteria": ["PR without microstep_id fails; PR with it passes"]
            }
          ]
        },
        {
          "id": "p6.s4",
          "title": "Secrets/PII Scan",
          "microsteps": [
            {
              "id": "p6.s4.ms1",
              "title": "CI secret scan",
              "status": "done",
              "criteria": ["Commits containing likely secrets fail with clear message"]
            }
          ]
        },
        {
          "id": "p6.s6",
          "title": "Governance UI",
          "microsteps": [
            {
              "id": "p6.s6.ms1",
              "title": "Settings → Governance page",
              "status": "done",
              "criteria": ["Validation errors shown inline; save disabled until valid"]
            },
            {
              "id": "p6.s6.ms2",
              "title": "Status widgets",
              "status": "done",
              "criteria": ["Widgets reflect last CI run states with links"]
            }
          ]
        }
      ]
    },
    {
      "id": "p8",
      "title": "Templates & Marketplace",
      "steps": [
        {
          "id": "p8.s1",
          "title": "Template Data Model & Storage",
          "microsteps": [
            {
              "id": "p8.s1.ms1",
              "title": "Schema & tables",
              "status": "done",
              "criteria": ["SQL applies cleanly; re-run safe"]
            },
            {
              "id": "p8.s1.ms2",
              "title": "Storage helpers",
              "status": "done",
              "criteria": ["Create/read/update/delete functions tested; audit events recorded"]
            },
            {
              "id": "p8.s1.ms3",
              "title": "Zod schemas",
              "status": "done",
              "criteria": ["Validates examples, rejects malformed payloads"]
            }
          ]
        },
        {
          "id": "p8.s2",
          "title": "Template Import & Diff Preview",
          "microsteps": [
            {
              "id": "p8.s2.ms1",
              "title": "Import UI",
              "status": "done",
              "criteria": ["Validates structure and shows summary (milestones/steps/microsteps counts)"]
            },
            {
              "id": "p8.s2.ms2",
              "title": "Dry-run merge",
              "status": "done",
              "criteria": ["Returns deterministic diff; large plans handled gracefully"]
            },
            {
              "id": "p8.s2.ms3",
              "title": "Apply merge",
              "status": "done",
              "criteria": ["spec-sync persists merged plan; runner_events logs action=template_merge_applied"]
            }
          ]
        },
        {
          "id": "p8.s3",
          "title": "Composable Packs",
          "microsteps": [
            {
              "id": "p8.s3.ms1",
              "title": "Pack format",
              "status": "done",
              "criteria": ["Schema validates; example packs pass (Auth, Billing, Email)"]
            },
            {
              "id": "p8.s3.ms2",
              "title": "Pack library",
              "status": "done",
              "criteria": ["Packs install individually or in combination via dry-run"]
            },
            {
              "id": "p8.s3.ms3",
              "title": "Conflict resolution",
              "status": "done",
              "criteria": ["Conflicts displayed with clear user choices; final apply is deterministic"]
            }
          ]
        },
        {
          "id": "p8.s4",
          "title": "Template Publisher & Marketplace",
          "microsteps": [
            {
              "id": "p8.s4.ms1",
              "title": "Publisher UI",
              "status": "done",
              "criteria": ["Save creates template_def + template_version rows; audit event action=template_published"]
            },
            {
              "id": "p8.s4.ms2",
              "title": "Marketplace browse",
              "status": "done",
              "criteria": ["Install → opens dry-run diff; user can apply and commit"]
            },
            {
              "id": "p8.s4.ms3",
              "title": "Ratings/usage counters",
              "status": "done",
              "criteria": ["Increment on successful apply; simple popularity sort"]
            }
          ]
        },
        {
          "id": "p8.s5",
          "title": "Governance Hooks for Templates",
          "microsteps": [
            {
              "id": "p8.s5.ms1",
              "title": "Policy checks on apply",
              "status": "done",
              "criteria": ["Violations block apply with actionable error"]
            },
            {
              "id": "p8.s5.ms2",
              "title": "Audit & history",
              "status": "done",
              "criteria": ["Phase 5 Timeline shows template events; data present in runner_events"]
            }
          ]
        },
        {
          "id": "p8.s6",
          "title": "Docs & Finalize Phase 8",
          "microsteps": [
            {
              "id": "p8.s6.ms1",
              "title": "README & help",
              "status": "done",
              "criteria": ["Docs render and link correctly"]
            },
            {
              "id": "p8.s6.ms2",
              "title": "Plan/state updates",
              "status": "done",
              "criteria": ["br lint passes; PR merged"]
            }
          ]
        }
      ]
    },
    {
      "id": "p9",
          "title": "Analytics & Cost Monitoring",
          "steps": [
            {
              "id": "p9.s1",
              "title": "Metrics & Cost Schema",
              "microsteps": [
                {
                  "id": "p9.s1.ms1",
                  "title": "Schema migration",
                  "status": "done",
                  "criteria": ["SQL idempotent; indexes created"]
                },
                {
                  "id": "p9.s1.ms2",
                  "title": "Metrics aggregates view",
                  "status": "done",
                  "criteria": ["SELECT returns expected rows"]
                },
                {
                  "id": "p9.s1.ms3",
                  "title": "Server lib analytics.ts",
                  "status": "done",
                  "criteria": ["Create/read/update/delete work; audit runner_events logged"]
                }
              ]
            },
            {
              "id": "p9.s2",
              "title": "Data Collection & Automation",
              "microsteps": [
                {
                  "id": "p9.s2.ms1",
                  "title": "Usage collector function",
                  "status": "done",
                  "criteria": ["Runs locally; logs entries to Supabase"]
                },
                {
                  "id": "p9.s2.ms2",
                  "title": "Metrics collector",
                  "status": "done",
                  "criteria": ["Re-runs safe; runner_event action=metrics_collected"]
                },
                {
                  "id": "p9.s2.ms3",
                  "title": "Anomaly detector",
                  "status": "done",
                  "criteria": ["Simulated spike creates alert"]
                }
              ]
            },
            {
              "id": "p9.s3",
              "title": "Analytics Dashboard (UI)",
              "microsteps": [
                {
                  "id": "p9.s3.ms1",
                  "title": "Dashboard page",
                  "status": "done",
                  "criteria": ["Charts render from metrics_summary"]
                },
                {
                  "id": "p9.s3.ms2",
                  "title": "Charts",
                  "status": "done",
                  "criteria": ["Responsive; tooltips work; filters by phase/project"]
                },
                {
                  "id": "p9.s3.ms3",
                  "title": "Drilldown",
                  "status": "done",
                  "criteria": ["Modal shows accurate linked records"]
                }
              ]
            },
            {
              "id": "p9.s4",
              "title": "Reports & Exports",
              "microsteps": [
                {
                  "id": "p9.s4.ms1",
                  "title": "PDF/CSV exports",
                  "status": "done",
                  "criteria": ["File downloads successfully; data matches dashboard"]
                },
                {
                  "id": "p9.s4.ms2",
                  "title": "Scheduled reports",
                  "status": "done",
                  "criteria": ["Email sent (server-side); runner_event action=report_sent"]
                }
              ]
            },
            {
              "id": "p9.s5",
              "title": "Governance & Audit Integration",
              "microsteps": [
                {
                  "id": "p9.s5.ms1",
                  "title": "Policy hooks",
                  "status": "done",
                  "criteria": ["policy schema updated; violations block merge if cost > threshold"]
                },
                {
                  "id": "p9.s5.ms2",
                  "title": "Audit logging",
                  "status": "done",
                  "criteria": ["Events visible in Timeline (Phase 5)"]
                }
              ]
            },
            {
              "id": "p9.s6",
              "title": "Docs & Finalize Phase 9",
              "microsteps": [
                {
                  "id": "p9.s6.ms1",
                  "title": "README + Help Guides",
                  "status": "done",
                  "criteria": ["Links and images valid"]
                },
                {
                  "id": "p9.s6.ms2",
                  "title": "Plan/State Update",
                  "status": "done",
                  "criteria": ["br lint OK; PR merged"]
                }
              ]
            }
          ]
        },
        {
          "id": "p10",
          "title": "Collaboration & Comments Integration",
          "steps": [
            {
              "id": "p10.s1",
              "title": "Roles & Seats",
              "microsteps": [
                {
                  "id": "p10.s1.ms1",
                  "title": "Schema for roles & membership",
                  "status": "done",
                  "criteria": ["SQL idempotent; role enums validated in server"]
                },
                {
                  "id": "p10.s1.ms2",
                  "title": "Role enforcement middleware",
                  "status": "done",
                  "criteria": ["Unauthorized attempts return 403 with actionable message"]
                },
                {
                  "id": "p10.s1.ms3",
                  "title": "Seats & plan gating",
                  "status": "done",
                  "criteria": ["UI shows 'seat limit reached' gracefully; server enforces"]
                }
              ]
            },
            {
              "id": "p10.s2",
              "title": "Comments & Mentions",
              "microsteps": [
                {
                  "id": "p10.s2.ms1",
                  "title": "Comments table & API",
                  "status": "done",
                  "criteria": ["Create/read/delete work; runner_events log action=comment_created/comment_deleted"]
                },
                {
                  "id": "p10.s2.ms2",
                  "title": "Mentions & subscriptions",
                  "status": "done",
                  "criteria": ["@mention parser tags users; subscribers get notifications"]
                },
                {
                  "id": "p10.s2.ms3",
                  "title": "Inline UI",
                  "status": "done",
                  "criteria": ["Threads render; @ autocomplete; markdown supported (limited)"]
                }
              ]
            },
            {
              "id": "p10.s3",
              "title": "Comment → Microstep Promotion",
              "microsteps": [
                {
                  "id": "p10.s3.ms1",
                  "title": "Promotion API",
                  "status": "done",
                  "criteria": ["spec-sync writes new microstep; IDs namespaced; runner_event action=promoted_to_microstep"]
                },
                {
                  "id": "p10.s3.ms2",
                  "title": "UI affordance",
                  "status": "done",
                  "criteria": ["Confirmation dialog shows target step; success toast; thread links to new microstep"]
                }
              ]
            },
            {
              "id": "p10.s4",
              "title": "Notifications (In-app + Email + Webhooks)",
              "microsteps": [
                {
                  "id": "p10.s4.ms1",
                  "title": "Notifications schema & service",
                  "status": "done",
                  "criteria": ["New comment/mention/promotion triggers notification; read/unread works"]
                },
                {
                  "id": "p10.s4.ms2",
                  "title": "UI notification center",
                  "status": "done",
                  "criteria": ["Realtime updates on new items; accessible keyboard nav"]
                },
                {
                  "id": "p10.s4.ms3",
                  "title": "Email & webhooks (opt-in)",
                  "status": "done",
                  "criteria": ["If configured, notifications deliver; otherwise no-op safely"]
                }
              ]
            },
            {
              "id": "p10.s5",
              "title": "Realtime Presence & Live Updates",
              "microsteps": [
                {
                  "id": "p10.s5.ms1",
                  "title": "Presence channel",
                  "status": "done",
                  "criteria": ["Show avatars of active users on a plan entity; presence drops after disconnect"]
                },
                {
                  "id": "p10.s5.ms2",
                  "title": "Live comment updates",
                  "status": "done",
                  "criteria": ["Second client sees new comment within 2s"]
                }
              ]
            },
            {
              "id": "p10.s6",
              "title": "Issue Sync Stubs (Jira/Linear Ready)",
              "microsteps": [
                {
                  "id": "p10.s6.ms1",
                  "title": "Mapping tables",
                  "status": "done",
                  "criteria": ["Idempotent SQL; indices on provider/external_id"]
                },
                {
                  "id": "p10.s6.ms2",
                  "title": "Create external issue from comment/microstep",
                  "status": "done",
                  "criteria": ["Mapping rows created with placeholders; runner_event action=external_issue_stubbed"]
                }
              ]
            },
            {
              "id": "p10.s7",
              "title": "Docs & Finalize Phase 10",
              "microsteps": [
                {
                  "id": "p10.s7.ms1",
                  "title": "README & in-app help",
                  "status": "done",
                  "criteria": ["Screenshots included; links valid"]
                },
                {
                  "id": "p10.s7.ms2",
                  "title": "Plan/State updates",
                  "status": "done",
                  "criteria": ["br lint passes; PR merged"]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "changeHistory": [
    {
      "timestamp": "2025-10-30T22:00:00.000Z",
      "version": "0.3.0",
      "phase": 3,
      "description": "Completed Phase 3 - Supabase Provisioner & One-Click Backend. Added fully automated backend provisioning with OAuth integration, encrypted vault storage, programmatic project creation, database migration, edge function deployment, and comprehensive UI workflow.",
      "author": "Auggie",
      "microsteps_completed": 10,
      "files_added": [
        "apps/server/lib/vault.ts",
        "apps/server/lib/supabaseMgmt.ts",
        "apps/web/app/api/provision/auth/start/route.ts",
        "apps/web/app/api/provision/auth/callback/route.ts",
        "apps/web/app/api/provision/projects/route.ts",
        "apps/web/app/api/provision/keys/route.ts",
        "apps/web/app/api/provision/setup-local/route.ts",
        "apps/web/app/api/provision/migrate/route.ts",
        "apps/web/app/api/provision/functions/route.ts",
        "apps/web/app/api/provision/health/route.ts",
        "apps/web/app/settings/backend/page.tsx",
        "apps/web/components/provision/StatusCard.tsx",
        "supabase/migrations/20251030000001_Phase3-baseline.sql"
      ]
    },
    {
      "timestamp": "2025-10-30T22:30:00.000Z",
      "version": "0.4.0",
      "phase": 4,
      "description": "Completed Phase 4 - UI MVP. Implemented app shell with sidebar navigation, Supabase Auth integration, project selector, and Create page with prompt-to-plan generation. Established foundation for Plan Editor, Workbench, Reconcile, Tests, and Settings pages with proper routing and state management.",
      "author": "Auggie",
      "microsteps_completed": 6,
      "files_added": [
        "apps/web/app/layout.tsx",
        "apps/web/app/globals.css",
        "apps/web/app/(app)/layout.tsx",
        "apps/web/app/(auth)/sign-in/page.tsx",
        "apps/web/app/(app)/create/page.tsx",
        "apps/web/app/(app)/plan/page.tsx",
        "apps/web/app/(app)/workbench/page.tsx",
        "apps/web/app/(app)/reconcile/page.tsx",
        "apps/web/app/(app)/tests/page.tsx",
        "apps/web/app/(app)/settings/page.tsx",
        "apps/web/app/api/plans/generate/route.ts",
        "apps/web/app/api/plans/local/route.ts",
        "apps/web/components/ui/button.tsx",
        "apps/web/components/ui/input.tsx",
        "apps/web/components/ui/textarea.tsx",
        "apps/web/components/auth/ProtectedRoute.tsx",
        "apps/web/components/project/ProjectSelector.tsx",
        "apps/web/lib/auth.tsx",
        "apps/web/lib/project.tsx",
        "apps/web/lib/api.ts",
        "apps/web/lib/types.ts",
        "apps/web/lib/utils.ts",
        ".github/pull_request_template.md"
      ]
    },
    {
      "timestamp": "2025-10-30T23:00:00.000Z",
      "version": "0.5.0",
      "phase": 5,
      "description": "Completed Phase 5 - Flow Inspector + Timeline. Implemented visual flow graph with ReactFlow showing hierarchical milestone→step→microstep relationships, drift indicators from spec-diff API, comprehensive timeline analytics with Recharts, progress cards with velocity tracking, and auto-refresh functionality. Added Flow and Timeline pages with interactive node details, progress summaries, and real-time data updates.",
      "author": "Auggie",
      "microsteps_completed": 8,
      "files_added": [
        "apps/web/lib/flow.ts",
        "apps/web/lib/timeline.ts",
        "apps/web/components/flow/FlowGraph.tsx",
        "apps/web/components/flow/NodeDrawer.tsx",
        "apps/web/components/flow/nodes/MilestoneNode.tsx",
        "apps/web/components/flow/nodes/StepNode.tsx",
        "apps/web/components/flow/nodes/MicrostepNode.tsx",
        "apps/web/components/timeline/TimelineChart.tsx",
        "apps/web/components/timeline/ProgressCards.tsx",
        "apps/web/components/ui/badge.tsx",
        "apps/web/app/(app)/flow/page.tsx",
        "apps/web/app/(app)/timeline/page.tsx",
        "apps/web/app/api/spec-diff/route.ts"
      ]
    },
    {
      "timestamp": "2025-10-30T23:30:00.000Z",
      "version": "0.6.0",
      "phase": 6,
      "description": "Completed Phase 6 - Governance & Safety Layer. Implemented Policy DSL with YAML configuration and JSON schema validation, protected paths enforcement with CODEOWNERS and GitHub Actions, microstep ID enforcement in PRs and commits, comprehensive secrets/PII scanning, governance UI with policy editor and status widgets, and complete audit trail with event logging. Added GitHub workflows for governance guard, PR templates, and CI integration.",
      "author": "Auggie",
      "microsteps_completed": 9,
      "files_added": [
        "governance/policy.yml",
        "governance/policy.schema.json",
        "apps/web/app/api/governance/validate/route.ts",
        ".github/CODEOWNERS",
        ".github/workflows/governance-guard.yml",
        "apps/web/components/governance/PolicyEditor.tsx",
        "apps/web/components/governance/StatusWidgets.tsx",
        "apps/web/app/(app)/settings/governance/page.tsx",
        "apps/web/lib/audit.ts",
        "apps/web/lib/approval.ts",
        "apps/web/lib/security.ts"
      ]
    },
    {
      "timestamp": "2025-10-31T01:30:00.000Z",
      "version": "0.8.0",
      "phase": 8,
      "description": "Completed Phase 8 - Templates & Marketplace. Implemented comprehensive template system with data model and storage, import UI with drag-and-drop validation, dry-run merge with semantic diff preview, composable packs with JSON patch format, marketplace browse with filtering and search, template publisher with versioning, governance hooks for policy compliance, and complete audit trail integration. Added 5 built-in packs (Auth, Billing, Email, Analytics, Blog) with conflict resolution and dependency management.",
      "author": "Auggie",
      "microsteps_completed": 16,
      "files_added": [
        "supabase/migrations/20251031000001_Phase8-templates.sql",
        "apps/web/lib/templates/storage.ts",
        "apps/web/lib/templates/schemas.ts",
        "apps/web/lib/templates/merge.ts",
        "apps/web/lib/templates/packs.ts",
        "apps/web/components/templates/ImportPanel.tsx",
        "apps/web/components/templates/DiffPreview.tsx",
        "apps/web/components/templates/TemplateCard.tsx",
        "apps/web/app/(app)/templates/page.tsx",
        "apps/web/app/(app)/templates/import/page.tsx",
        "apps/web/app/api/templates/route.ts",
        "apps/web/app/api/templates/packs/route.ts",
        "apps/web/app/api/templates/merge/dry-run/route.ts",
        "apps/web/app/api/templates/merge/apply/route.ts"
      ]
    },
    {
      "timestamp": "2025-10-31T02:30:00.000Z",
      "version": "0.9.0",
      "phase": 9,
      "description": "Completed Phase 9 - Analytics & Cost Monitoring. Implemented comprehensive analytics system with metrics tracking (velocity, quality, duration), multi-provider cost monitoring (OpenAI, Supabase, Vercel, GitHub), automated anomaly detection with severity classification, interactive dashboard with drilldown capabilities, scheduled reporting with PDF/CSV exports, and complete governance integration with budget enforcement and policy compliance. Added Edge Functions for usage collection and report scheduling.",
      "author": "Auggie",
      "microsteps_completed": 15,
      "files_added": [
        "supabase/migrations/20251031000002_Phase9-analytics.sql",
        "apps/web/lib/analytics/storage.ts",
        "apps/web/lib/analytics/collector.ts",
        "apps/web/lib/analytics/anomaly.ts",
        "apps/web/components/analytics/Cards.tsx",
        "apps/web/components/analytics/Charts.tsx",
        "apps/web/components/analytics/DrilldownModal.tsx",
        "apps/web/app/(app)/analytics/page.tsx",
        "apps/web/app/api/analytics/export/route.ts",
        "supabase/functions/usage-collector/index.ts",
        "supabase/functions/report-scheduler/index.ts",
        "buildrunner/governance/policy.yml"
      ]
    },
    {
      "timestamp": "2025-10-31T03:00:00.000Z",
      "version": "1.0.0-rc.0",
      "phase": 10,
      "description": "Completed Phase 10 - Collaboration & Comments Integration. Implemented comprehensive team collaboration with role-based access control (PM, TechLead, QA, Contributor, Viewer), inline threaded comments with @mentions and subscriptions, comment-to-microstep promotion workflow, realtime presence tracking with Supabase Realtime, notification center with in-app/email/webhook delivery, and external issue sync stubs for Jira/Linear/GitHub/Asana integration. Added plan limits and seat management with billing tier enforcement.",
      "author": "Auggie",
      "microsteps_completed": 17,
      "files_added": [
        "supabase/migrations/20251031000003_Phase10-collab.sql",
        "apps/web/lib/auth/roles.ts",
        "apps/web/lib/auth/plans.ts",
        "apps/web/app/api/comments/route.ts",
        "apps/web/app/api/comments/[id]/route.ts",
        "apps/web/app/api/comments/[id]/promote/route.ts",
        "apps/web/lib/comments/mentions.ts",
        "apps/web/components/comments/CommentThread.tsx",
        "apps/web/components/comments/CommentComposer.tsx",
        "apps/web/components/comments/PromotionDialog.tsx",
        "apps/web/lib/notifications/service.ts",
        "apps/web/components/notifications/NotificationCenter.tsx",
        "apps/web/lib/realtime/presence.ts",
        "apps/web/lib/realtime/comments.ts",
        "apps/web/app/api/issues/route.ts"
      ]
    }
  ]
}
