{
  "projectId": "placeholder:will-be-uuid",
  "title": "BuildRunner Core Runner & Spec Foundation",
  "version": "0.2.0",
  "updatedAt": "2025-10-30T21:30:00.000Z",
  "milestones": [
    {
      "id": "m1",
      "title": "Setup Environment & Repo",
      "steps": [
        {
          "id": "m1.s1",
          "title": "Scaffold repository and CLI skeleton",
          "microsteps": [
            {
              "id": "m1.s1.ms1",
              "title": "Create base folder structure (/buildrunner/*, /src/*)",
              "status": "todo",
              "criteria": ["Folders exist with correct paths and tracked by git"]
            },
            {
              "id": "m1.s1.ms2",
              "title": "Initialize Node+TypeScript project",
              "status": "todo",
              "criteria": ["package.json and tsconfig.json exist; tsc compiles without errors"]
            },
            {
              "id": "m1.s1.ms3",
              "title": "Install runtime and dev dependencies",
              "status": "todo",
              "criteria": ["lockfile present; scripts run successfully"]
            },
            {
              "id": "m1.s1.ms4",
              "title": "Create Build Spec TS interfaces",
              "status": "todo",
              "criteria": ["src/schema/buildSpec.ts exports BuildSpec, Milestone, Step, Microstep types; builds cleanly"]
            },
            {
              "id": "m1.s1.ms5",
              "title": "Stub CLI command router",
              "status": "todo",
              "criteria": ["src/index.ts compiles; 'node dist/index.js --help' shows commands: init, sync, status (stub handlers)"]
            },
            {
              "id": "m1.s1.ms6",
              "title": "Add runner_state.json seed and plan.json seed",
              "status": "todo",
              "criteria": ["runner_state.json mirrors plan skeleton with same milestone/step structure"]
            },
            {
              "id": "m1.s1.ms7",
              "title": "Create .env.example and verify-env script",
              "status": "todo",
              "criteria": [".env.example lists SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY; scripts: dev, build, test work"]
            },
            {
              "id": "m1.s1.ms8",
              "title": "Initial README with getting started",
              "status": "todo",
              "criteria": ["README shows install, dev, build commands and folder overview"]
            }
          ]
        }
      ]
    },
    {
      "id": "m2",
      "title": "Spec Schema Expansion + Supabase Sync",
      "steps": [
        {
          "id": "m2.s1",
          "title": "Expand Schema",
          "microsteps": [
            {
              "id": "m2.s1.ms1",
              "title": "Update TypeScript interfaces with new fields",
              "status": "done",
              "criteria": ["TypeScript compiles without errors"]
            },
            {
              "id": "m2.s1.ms2",
              "title": "Add Ajv JSON Schema with validators",
              "status": "done",
              "criteria": ["Schema validates valid sample and rejects invalid sample"]
            },
            {
              "id": "m2.s1.ms3",
              "title": "CLI lint command",
              "status": "done",
              "criteria": ["0 validation errors on existing plan; fails on bad sample"]
            }
          ]
        },
        {
          "id": "m2.s2",
          "title": "Supabase Schema + Migrations",
          "microsteps": [
            {
              "id": "m2.s2.ms1",
              "title": "Create SQL migration",
              "status": "done",
              "criteria": ["Migration file present and formatted"]
            },
            {
              "id": "m2.s2.ms2",
              "title": "Add spec-sync Edge Function",
              "status": "done",
              "criteria": ["Function compiles locally"]
            },
            {
              "id": "m2.s2.ms3",
              "title": "Add spec-diff Edge Function",
              "status": "done",
              "criteria": ["Function compiles locally"]
            },
            {
              "id": "m2.s2.ms4",
              "title": "Add npm scripts",
              "status": "done",
              "criteria": ["package.json updated with Supabase scripts"]
            }
          ]
        },
        {
          "id": "m2.s3",
          "title": "CLI + API Integration",
          "microsteps": [
            {
              "id": "m2.s3.ms1",
              "title": "Implement buildrunner sync",
              "status": "done",
              "criteria": ["Console prints sync results"]
            },
            {
              "id": "m2.s3.ms2",
              "title": "Implement buildrunner status",
              "status": "done",
              "criteria": ["Shows Supabase health status"]
            }
          ]
        }
      ]
    }
  ]
}
