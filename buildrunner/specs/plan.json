{
  "projectId": "placeholder:will-be-uuid",
  "title": "BuildRunner Core Runner & Spec Foundation",
  "version": "0.4.0",
  "updatedAt": "2025-10-30T22:30:00.000Z",
  "milestones": [
    {
      "id": "m1",
      "title": "Setup Environment & Repo",
      "steps": [
        {
          "id": "m1.s1",
          "title": "Scaffold repository and CLI skeleton",
          "microsteps": [
            {
              "id": "m1.s1.ms1",
              "title": "Create base folder structure (/buildrunner/*, /src/*)",
              "status": "todo",
              "criteria": ["Folders exist with correct paths and tracked by git"]
            },
            {
              "id": "m1.s1.ms2",
              "title": "Initialize Node+TypeScript project",
              "status": "todo",
              "criteria": ["package.json and tsconfig.json exist; tsc compiles without errors"]
            },
            {
              "id": "m1.s1.ms3",
              "title": "Install runtime and dev dependencies",
              "status": "todo",
              "criteria": ["lockfile present; scripts run successfully"]
            },
            {
              "id": "m1.s1.ms4",
              "title": "Create Build Spec TS interfaces",
              "status": "todo",
              "criteria": ["src/schema/buildSpec.ts exports BuildSpec, Milestone, Step, Microstep types; builds cleanly"]
            },
            {
              "id": "m1.s1.ms5",
              "title": "Stub CLI command router",
              "status": "todo",
              "criteria": ["src/index.ts compiles; 'node dist/index.js --help' shows commands: init, sync, status (stub handlers)"]
            },
            {
              "id": "m1.s1.ms6",
              "title": "Add runner_state.json seed and plan.json seed",
              "status": "todo",
              "criteria": ["runner_state.json mirrors plan skeleton with same milestone/step structure"]
            },
            {
              "id": "m1.s1.ms7",
              "title": "Create .env.example and verify-env script",
              "status": "todo",
              "criteria": [".env.example lists SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY; scripts: dev, build, test work"]
            },
            {
              "id": "m1.s1.ms8",
              "title": "Initial README with getting started",
              "status": "todo",
              "criteria": ["README shows install, dev, build commands and folder overview"]
            }
          ]
        }
      ]
    },
    {
      "id": "m2",
      "title": "Spec Schema Expansion + Supabase Sync",
      "steps": [
        {
          "id": "m2.s1",
          "title": "Expand Schema",
          "microsteps": [
            {
              "id": "m2.s1.ms1",
              "title": "Update TypeScript interfaces with new fields",
              "status": "done",
              "criteria": ["TypeScript compiles without errors"]
            },
            {
              "id": "m2.s1.ms2",
              "title": "Add Ajv JSON Schema with validators",
              "status": "done",
              "criteria": ["Schema validates valid sample and rejects invalid sample"]
            },
            {
              "id": "m2.s1.ms3",
              "title": "CLI lint command",
              "status": "done",
              "criteria": ["0 validation errors on existing plan; fails on bad sample"]
            }
          ]
        },
        {
          "id": "m2.s2",
          "title": "Supabase Schema + Migrations",
          "microsteps": [
            {
              "id": "m2.s2.ms1",
              "title": "Create SQL migration",
              "status": "done",
              "criteria": ["Migration file present and formatted"]
            },
            {
              "id": "m2.s2.ms2",
              "title": "Add spec-sync Edge Function",
              "status": "done",
              "criteria": ["Function compiles locally"]
            },
            {
              "id": "m2.s2.ms3",
              "title": "Add spec-diff Edge Function",
              "status": "done",
              "criteria": ["Function compiles locally"]
            },
            {
              "id": "m2.s2.ms4",
              "title": "Add npm scripts",
              "status": "done",
              "criteria": ["package.json updated with Supabase scripts"]
            }
          ]
        },
        {
          "id": "m2.s3",
          "title": "CLI + API Integration",
          "microsteps": [
            {
              "id": "m2.s3.ms1",
              "title": "Implement buildrunner sync",
              "status": "done",
              "criteria": ["Console prints sync results"]
            },
            {
              "id": "m2.s3.ms2",
              "title": "Implement buildrunner status",
              "status": "done",
              "criteria": ["Shows Supabase health status"]
            }
          ]
        }
      ]
    },
    {
      "id": "p3",
      "title": "Supabase Provisioner & One-Click Backend",
      "steps": [
        {
          "id": "p3.s1",
          "title": "Provisioner service (server-side)",
          "microsteps": [
            {
              "id": "p3.s1.ms1",
              "title": "OAuth/PAT intake routes + encrypted vault",
              "status": "done",
              "criteria": ["OAuth flow completes; token encrypted server-side; no secrets in client"]
            },
            {
              "id": "p3.s1.ms2",
              "title": "Create project via Management API",
              "status": "done",
              "criteria": ["Management API creates project; project_ref recorded"]
            },
            {
              "id": "p3.s1.ms3",
              "title": "Fetch API keys to vault",
              "status": "done",
              "criteria": ["Keys fetched & stored in vault; client sees only masked publishable info"]
            },
            {
              "id": "p3.s1.ms4",
              "title": "Local developer convenience",
              "status": "done",
              "criteria": ["Local .env updated with URL+ANON; runner_state.json timestamps updated"]
            }
          ]
        },
        {
          "id": "p3.s2",
          "title": "Automated DB & Edge Functions",
          "microsteps": [
            {
              "id": "p3.s2.ms1",
              "title": "Baseline idempotent schema",
              "status": "done",
              "criteria": ["SQL lint OK; re-running is safe (idempotent)"]
            },
            {
              "id": "p3.s2.ms2",
              "title": "Programmatic migration apply",
              "status": "done",
              "criteria": ["Tables exist; runner_events action=migration_applied"]
            },
            {
              "id": "p3.s2.ms3",
              "title": "Deploy/verify Edge Functions",
              "status": "done",
              "criteria": ["Deploy returns success; health check 200; log runner_events action=functions_deployed"]
            }
          ]
        },
        {
          "id": "p3.s3",
          "title": "UI: One-Click Create Backend",
          "microsteps": [
            {
              "id": "p3.s3.ms1",
              "title": "Settings→Backend page",
              "status": "done",
              "criteria": ["UX shows deterministic step progression; errors are actionable"]
            },
            {
              "id": "p3.s3.ms2",
              "title": "Success + diagnostics",
              "status": "done",
              "criteria": ["All checks green, or clear error message with retry"]
            },
            {
              "id": "p3.s3.ms3",
              "title": "Plan/state completion & change history",
              "status": "done",
              "criteria": ["Lint passes; version bumped (0.3.0), updatedAt set; files committed"]
            }
          ]
        }
      ]
    },
    {
      "id": "p4",
      "title": "UI MVP (Create/Plan/Workbench/Reconcile/Tests/Settings)",
      "steps": [
        {
          "id": "p4.s1",
          "title": "App Shell, Auth, Navigation",
          "microsteps": [
            {
              "id": "p4.s1.ms1",
              "title": "Scaffold app shell",
              "status": "done",
              "criteria": ["Layout renders; routes load; Tailwind works"]
            },
            {
              "id": "p4.s1.ms2",
              "title": "Supabase Auth integration",
              "status": "done",
              "criteria": ["Unauthed users redirected to sign-in"]
            },
            {
              "id": "p4.s1.ms3",
              "title": "Project selector",
              "status": "done",
              "criteria": ["Current project reflected across pages"]
            }
          ]
        },
        {
          "id": "p4.s2",
          "title": "Create (Prompt → Plan)",
          "microsteps": [
            {
              "id": "p4.s2.ms1",
              "title": "Create page UI",
              "status": "done",
              "criteria": ["Validates non-empty prompt"]
            },
            {
              "id": "p4.s2.ms2",
              "title": "Prompt → Build Spec",
              "status": "done",
              "criteria": ["Plan appears in Plan Editor after save; diff view shows new Phase/Steps"]
            },
            {
              "id": "p4.s2.ms3",
              "title": "Version bump + history",
              "status": "done",
              "criteria": ["br lint passes; state timestamps updated"]
            }
          ]
        }
      ]
    }
  ],
  "changeHistory": [
    {
      "timestamp": "2025-10-30T22:00:00.000Z",
      "version": "0.3.0",
      "phase": 3,
      "description": "Completed Phase 3 - Supabase Provisioner & One-Click Backend. Added fully automated backend provisioning with OAuth integration, encrypted vault storage, programmatic project creation, database migration, edge function deployment, and comprehensive UI workflow.",
      "author": "Auggie",
      "microsteps_completed": 10,
      "files_added": [
        "apps/server/lib/vault.ts",
        "apps/server/lib/supabaseMgmt.ts",
        "apps/web/app/api/provision/auth/start/route.ts",
        "apps/web/app/api/provision/auth/callback/route.ts",
        "apps/web/app/api/provision/projects/route.ts",
        "apps/web/app/api/provision/keys/route.ts",
        "apps/web/app/api/provision/setup-local/route.ts",
        "apps/web/app/api/provision/migrate/route.ts",
        "apps/web/app/api/provision/functions/route.ts",
        "apps/web/app/api/provision/health/route.ts",
        "apps/web/app/settings/backend/page.tsx",
        "apps/web/components/provision/StatusCard.tsx",
        "supabase/migrations/20251030000001_Phase3-baseline.sql"
      ]
    },
    {
      "timestamp": "2025-10-30T22:30:00.000Z",
      "version": "0.4.0",
      "phase": 4,
      "description": "Completed Phase 4 - UI MVP. Implemented app shell with sidebar navigation, Supabase Auth integration, project selector, and Create page with prompt-to-plan generation. Established foundation for Plan Editor, Workbench, Reconcile, Tests, and Settings pages with proper routing and state management.",
      "author": "Auggie",
      "microsteps_completed": 6,
      "files_added": [
        "apps/web/app/layout.tsx",
        "apps/web/app/globals.css",
        "apps/web/app/(app)/layout.tsx",
        "apps/web/app/(auth)/sign-in/page.tsx",
        "apps/web/app/(app)/create/page.tsx",
        "apps/web/app/(app)/plan/page.tsx",
        "apps/web/app/(app)/workbench/page.tsx",
        "apps/web/app/(app)/reconcile/page.tsx",
        "apps/web/app/(app)/tests/page.tsx",
        "apps/web/app/(app)/settings/page.tsx",
        "apps/web/app/api/plans/generate/route.ts",
        "apps/web/app/api/plans/local/route.ts",
        "apps/web/components/ui/button.tsx",
        "apps/web/components/ui/input.tsx",
        "apps/web/components/ui/textarea.tsx",
        "apps/web/components/auth/ProtectedRoute.tsx",
        "apps/web/components/project/ProjectSelector.tsx",
        "apps/web/lib/auth.tsx",
        "apps/web/lib/project.tsx",
        "apps/web/lib/api.ts",
        "apps/web/lib/types.ts",
        "apps/web/lib/utils.ts",
        ".github/pull_request_template.md"
      ]
    }
  ]
}
